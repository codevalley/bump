# Simple two-stage Dockerfile that should work reliably
# First, build the application in a Rust container
FROM rust:slim as builder

# Copy only what's needed for dependency resolution first
WORKDIR /app
COPY Cargo.toml ./

# Create a dummy main.rs file to compile dependencies
RUN mkdir -p src && \
    echo "fn main() {}" > src/main.rs && \
    cargo build --release && \
    rm -rf src

# Now copy the actual source code
COPY . .

# Force a rebuild with the real source
RUN touch src/main.rs && \
    cargo build --release

# Second stage: create a small runtime image
FROM debian:bullseye-slim

# Install only needed runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy the binary from the builder stage
COPY --from=builder /app/target/release/bump /usr/local/bin/bump

# Set environment variables
ENV RUST_LOG=info
ENV PORT=8080
ENV BUMP_MAX_QUEUE_SIZE=1000
ENV BUMP_MAX_DISTANCE_METERS=5.0
ENV BUMP_MAX_TIME_DIFF_MS=500
ENV BUMP_DEFAULT_TTL_MS=500
ENV BUMP_CLEANUP_INTERVAL_MS=1000
ENV BUMP_TEMPORAL_WEIGHT=0.7
ENV BUMP_SPATIAL_WEIGHT=0.3
ENV BUMP_EARTH_RADIUS_METERS=6371000.0

# Expose the port
EXPOSE 8080

# Command to run
CMD ["bump"]